Chain of Responsibility Pattern →
🔹 Passes a request through a chain of handlers
🔹 Each handler processes or forwards the request

Example:
var handler = new Logger();
handler.SetNext(new Authenticator()).SetNext(new Processor());
handler.Process("user"); 
handler.Process("admin"); 

✔️ Key Idea: Flexible request processing chain!


-------------------------------------------------

Key Programming Concept
✔️ Instance uses another instance within itself
✔️ SetNext() returns this, enabling chain-like method calls (handler.SetNext().SetNext())
✔️ Method execution follows the chain dynamically

-------------------------------------------------

Key Takeaway:
✔ Each handler is a separate instance of BaseHandler.
✔ They are not sharing the same instance but are chained together.
✔ The chain is built manually with SetNext().
✔ Each handler has a reference (_next) to only one next handler.